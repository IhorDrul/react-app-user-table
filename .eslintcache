[{"C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\index.js":"1","C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\App.js":"2","C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\reportWebVitals.js":"3","C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\Pages\\Contacts\\index.jsx":"4","C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\Pages\\Contacts\\constats.js":"5","C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\Pages\\Contacts\\ToggleViewMode\\index.js":"6","C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\Pages\\Contacts\\useContact.jsx":"7","C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\Pages\\Contacts\\ContactsTable\\index.jsx":"8","C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\Constants\\nationality.jsx":"9","C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\Components\\CopyText\\index.jsx":"10"},{"size":500,"mtime":1611742726795,"results":"11","hashOfConfig":"12"},{"size":159,"mtime":1611742726787,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611742726795,"results":"14","hashOfConfig":"12"},{"size":2379,"mtime":1611754191836,"results":"15","hashOfConfig":"12"},{"size":71,"mtime":1611742726791,"results":"16","hashOfConfig":"12"},{"size":1373,"mtime":1611753563893,"results":"17","hashOfConfig":"12"},{"size":1398,"mtime":1611749984682,"results":"18","hashOfConfig":"12"},{"size":3087,"mtime":1611749659172,"results":"19","hashOfConfig":"12"},{"size":915,"mtime":1611742726787,"results":"20","hashOfConfig":"12"},{"size":1739,"mtime":1611742726787,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ouvw7j",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},"C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\index.js",[],"C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\App.js",[],"C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\reportWebVitals.js",[],"C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\Pages\\Contacts\\index.jsx",[],"C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\Pages\\Contacts\\constats.js",[],"C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\Pages\\Contacts\\ToggleViewMode\\index.js",["45","46","47"],"C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\Pages\\Contacts\\useContact.jsx",["48"],"C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\Pages\\Contacts\\ContactsTable\\index.jsx",["49","50","51"],"import { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport format from 'date-fns/format'\nimport parseISO from 'date-fns/parseISO'\nimport React from \"react\";\nimport Box from '@material-ui/core/Box';\nimport {NATIONALITIES_HUMAN_NAME} from '../../../Constants/nationality'\n\nimport {CopyToClipboardText} from \"../../../Components/CopyText\";\n\nconst useStyles = makeStyles({\n    table: {\n    },\n})\n\nexport const ContactsTable = ({data}) => {\n    const classes = useStyles()\n    return  <TableContainer component={Paper} data-testid='contacts-table-container'>\n        <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                    <TableCell>Avatar</TableCell>\n                    <TableCell>Full name</TableCell>\n                    <TableCell>Birthday</TableCell>\n                    <TableCell>Email</TableCell>\n                    <TableCell>Phone number</TableCell>\n                    <TableCell>Location</TableCell>\n                    <TableCell align=\"right\">Nationality</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {data.map((row) => (\n                    <TableRow key={row.login.uuid}>\n                        <TableCell component=\"th\" scope=\"row\">\n                            <Avatar alt={`${row.name.first}${row.name.last}`} src={row.picture.thumbnail} />\n                        </TableCell>\n                        <TableCell>{row.name.title}{row.name.title.length > 3 ? null : '.'} {row.name.first} {row.name.last}</TableCell>\n                        <TableCell>\n                            {/*<Typography>{format(parseISO(row.dob.data), \"MM/dd/yyyy\")}</Typography>*/}\n                            <Typography>{row.dob.age} years</Typography>\n                        </TableCell>\n                        <TableCell>\n                            <CopyToClipboardText text={row.email}/>\n                        </TableCell>\n                        <TableCell>\n                            <CopyToClipboardText text = {row.phone}/>\n                        </TableCell>\n                        <TableCell>\n                            <Typography>{row.location.country}</Typography>\n                            <Typography>{row.location.city}</Typography>\n                            <Typography>{row.location.street.name}</Typography>\n                        </TableCell>\n                        <TableCell align=\"right\">{NATIONALITIES_HUMAN_NAME[row.nat]}</TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    </TableContainer>\n}\n",["52","53"],"C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\Constants\\nationality.jsx",[],"C:\\Users\\Ihor\\Desktop\\react-app-user-table\\src\\Components\\CopyText\\index.jsx",["54"],"import {useCallback, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {useCopyToClipboard} from 'react-use'\nimport Box from '@material-ui/core/Box'\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\nimport React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { ClickAwayListener } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    root: {\n        cursor: 'pointer'\n    },\n    icon: {\n        marginRight: '5px'\n    }\n})\n\nexport const CopyToClipboardText = ({text}) => {\n    const [state, copyToClipboard] = useCopyToClipboard()\n    const classes = useStyles()\n    const [statusCopy, setStatusCopy] = useState('copy')\n    const tooltipTitle = () => {\n        switch (statusCopy) {\n            case 'copy':\n                return 'Copy'\n            case 'copied':\n                return 'Copied'\n            default:\n                return ''\n        }\n    }\n    const onClickCopy = useCallback(() => {\n        copyToClipboard(text)\n        setStatusCopy('copied')\n    },[copyToClipboard,text])\n    const onMouseLeaveCopy = useCallback(() =>{\n        setStatusCopy('copy')\n    },[setStatusCopy])\n    return <ClickAwayListener onClickAway={onMouseLeaveCopy}>\n        <Tooltip title={tooltipTitle()} placement={'top'}>\n            <Box display = 'flex'\n                 alignItems = 'center'\n                 className = {classes.root}\n                 onClick={onClickCopy}\n            >\n                <FileCopyIcon fontSize = 'small' className = {classes.icon}/>\n                {text}\n            </Box>\n        </Tooltip>\n        </ClickAwayListener>\n\n}\n\nCopyToClipboardText.propTypes = {\n    text: PropTypes.string.isRequired\n}\n",{"ruleId":"55","severity":1,"message":"56","line":1,"column":16,"nodeType":"57","messageId":"58","endLine":1,"endColumn":24},{"ruleId":"55","severity":1,"message":"59","line":1,"column":26,"nodeType":"57","messageId":"58","endLine":1,"endColumn":35},{"ruleId":"60","severity":1,"message":"61","line":12,"column":7,"nodeType":"62","endLine":12,"endColumn":21,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":25,"column":13,"nodeType":"66","messageId":"67","endLine":39,"endColumn":18},{"ruleId":"55","severity":1,"message":"68","line":11,"column":8,"nodeType":"57","messageId":"58","endLine":11,"endColumn":14},{"ruleId":"55","severity":1,"message":"69","line":12,"column":8,"nodeType":"57","messageId":"58","endLine":12,"endColumn":16},{"ruleId":"55","severity":1,"message":"70","line":14,"column":8,"nodeType":"57","messageId":"58","endLine":14,"endColumn":11},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"55","severity":1,"message":"75","line":21,"column":12,"nodeType":"57","messageId":"58","endLine":21,"endColumn":17},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setDataViewMode'. Either include it or remove the dependency array. If 'setDataViewMode' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["76"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'format' is defined but never used.","'parseISO' is defined but never used.","'Box' is defined but never used.","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"'state' is assigned a value but never used.",{"desc":"79","fix":"80"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [setDataViewMode]",{"range":"81","text":"82"},[553,567],"[setDataViewMode]"]